% ansible-playbook install_raspberrypi.yml
SSH password: 

PLAY [Raspberry Pi 3B+ Configuration] *********************************************************************

TASK [Update apt cache] ***********************************************************************************
fatal: [10.10.10.100]: FAILED! => {"msg": "to use the 'ssh' connection type with passwords or pkcs11_provider, you must install the sshpass program"}

PLAY RECAP ************************************************************************************************
10.10.10.100             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
% ansible-playbook -v -b -c paramiko --ask-pass install_raspberrypi.yml  
Using /Users/andi/Documents/GitHub/bachelor-thesis/ansible/ansible.cfg as config file
SSH password: 
[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

PLAY [Raspberry Pi 3B+ Configuration] *********************************************************************

TASK [Update apt cache] ***********************************************************************************
[WARNING]: Platform linux on host 10.10.10.100 is using the discovered Python interpreter at
/usr/bin/python3.9, but future installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for
more information.
ok: [10.10.10.100] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.9"}, "cache_update_time": 1685887513, "cache_updated": false, "changed": false}

TASK [Install required packages] **************************************************************************
ok: [10.10.10.100] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1685887513, "cache_updated": false, "changed": false, "item": "curl"}
ok: [10.10.10.100] => (item=gnupg2) => {"ansible_loop_var": "item", "cache_update_time": 1685887513, "cache_updated": false, "changed": false, "item": "gnupg2"}
ok: [10.10.10.100] => (item=apt-transport-https) => {"ansible_loop_var": "item", "cache_update_time": 1685887513, "cache_updated": false, "changed": false, "item": "apt-transport-https"}
ok: [10.10.10.100] => (item=ca-certificates) => {"ansible_loop_var": "item", "cache_update_time": 1685887513, "cache_updated": false, "changed": false, "item": "ca-certificates"}
ok: [10.10.10.100] => (item=software-properties-common) => {"ansible_loop_var": "item", "cache_update_time": 1685887513, "cache_updated": false, "changed": false, "item": "software-properties-common"}

TASK [Download Docker convenience script] *****************************************************************
changed: [10.10.10.100] => {"changed": true, "cmd": "curl -fsSL https://get.docker.com -o get-docker.sh", "delta": "0:00:00.242694", "end": "2023-06-04 15:13:39.653492", "msg": "", "rc": 0, "start": "2023-06-04 15:13:39.410798", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Run Docker convenience script] **********************************************************************
changed: [10.10.10.100] => {"changed": true, "cmd": "sudo sh get-docker.sh", "delta": "0:05:01.512438", "end": "2023-06-04 15:18:42.870827", "msg": "", "rc": 0, "start": "2023-06-04 15:13:41.358389", "stderr": "+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\n+ sh -c install -m 0755 -d /etc/apt/keyrings\n+ sh -c curl -fsSL \"https://download.docker.com/linux/debian/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg\n+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg\n+ sh -c echo \"deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bullseye stable\" > /etc/apt/sources.list.d/docker.list\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin >/dev/null\n+ sh -c docker version", "stderr_lines": ["+ sh -c apt-get update -qq >/dev/null", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null", "+ sh -c install -m 0755 -d /etc/apt/keyrings", "+ sh -c curl -fsSL \"https://download.docker.com/linux/debian/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg", "+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg", "+ sh -c echo \"deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bullseye stable\" > /etc/apt/sources.list.d/docker.list", "+ sh -c apt-get update -qq >/dev/null", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin >/dev/null", "+ sh -c docker version"], "stdout": "# Executing docker install script, commit: c2de0811708b6d9015ed1a2c80f02c9b70c8ce7b\nClient: Docker Engine - Community\n Version:           24.0.2\n API version:       1.43\n Go version:        go1.20.4\n Git commit:        cb74dfc\n Built:             Thu May 25 21:50:59 2023\n OS/Arch:           linux/arm64\n Context:           default\n\nServer: Docker Engine - Community\n Engine:\n  Version:          24.0.2\n  API version:      1.43 (minimum version 1.12)\n  Go version:       go1.20.4\n  Git commit:       659604f\n  Built:            Thu May 25 21:50:59 2023\n  OS/Arch:          linux/arm64\n  Experimental:     false\n containerd:\n  Version:          1.6.21\n  GitCommit:        3dce8eb055cbb6872793272b4f20ed16117344f8\n runc:\n  Version:          1.1.7\n  GitCommit:        v1.1.7-0-g860f061\n docker-init:\n  Version:          0.19.0\n  GitCommit:        de40ad0\n\n================================================================================\n\nTo run Docker as a non-privileged user, consider setting up the\nDocker daemon in rootless mode for your user:\n\n    dockerd-rootless-setuptool.sh install\n\nVisit https://docs.docker.com/go/rootless/ to learn about rootless mode.\n\n\nTo run the Docker daemon as a fully privileged service, but granting non-root\nusers access, refer to https://docs.docker.com/go/daemon-access/\n\nWARNING: Access to the remote API on a privileged Docker daemon is equivalent\n         to root access on the host. Refer to the 'Docker daemon attack surface'\n         documentation for details: https://docs.docker.com/go/attack-surface/\n\n================================================================================", "stdout_lines": ["# Executing docker install script, commit: c2de0811708b6d9015ed1a2c80f02c9b70c8ce7b", "Client: Docker Engine - Community", " Version:           24.0.2", " API version:       1.43", " Go version:        go1.20.4", " Git commit:        cb74dfc", " Built:             Thu May 25 21:50:59 2023", " OS/Arch:           linux/arm64", " Context:           default", "", "Server: Docker Engine - Community", " Engine:", "  Version:          24.0.2", "  API version:      1.43 (minimum version 1.12)", "  Go version:       go1.20.4", "  Git commit:       659604f", "  Built:            Thu May 25 21:50:59 2023", "  OS/Arch:          linux/arm64", "  Experimental:     false", " containerd:", "  Version:          1.6.21", "  GitCommit:        3dce8eb055cbb6872793272b4f20ed16117344f8", " runc:", "  Version:          1.1.7", "  GitCommit:        v1.1.7-0-g860f061", " docker-init:", "  Version:          0.19.0", "  GitCommit:        de40ad0", "", "================================================================================", "", "To run Docker as a non-privileged user, consider setting up the", "Docker daemon in rootless mode for your user:", "", "    dockerd-rootless-setuptool.sh install", "", "Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.", "", "", "To run the Docker daemon as a fully privileged service, but granting non-root", "users access, refer to https://docs.docker.com/go/daemon-access/", "", "WARNING: Access to the remote API on a privileged Docker daemon is equivalent", "         to root access on the host. Refer to the 'Docker daemon attack surface'", "         documentation for details: https://docs.docker.com/go/attack-surface/", "", "================================================================================"]}

TASK [Add pi user to docker group] ************************************************************************
changed: [10.10.10.100] => {"changed": true, "comment": "", "create_home": true, "group": 1001, "groups": "docker", "home": "/home/pi", "name": "pi", "shell": "/bin/bash", "state": "present", "system": false, "uid": 1001}

TASK [Start and enable Docker service] ********************************************************************
ok: [10.10.10.100] => {"changed": false, "enabled": true, "name": "docker", "state": "started", "status": {"ActiveEnterTimestamp": "Sun 2023-06-04 15:18:22 BST", "ActiveEnterTimestampMonotonic": "5885960948", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "docker.socket systemd-journald.socket sysinit.target basic.target network-online.target firewalld.service containerd.service time-set.target system.slice", "AllowIsolate": "no", "AllowedCPUs": "", "AllowedMemoryNodes": "", "AmbientCapabilities": "", "AssertResult": "yes", "AssertTimestamp": "Sun 2023-06-04 15:18:15 BST", "AssertTimestampMonotonic": "5879127960", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinity": "", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "1528794000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Sun 2023-06-04 15:18:15 BST", "ConditionTimestampMonotonic": "5879127946", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/docker.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "yes", "DelegateControllers": "cpu cpuacct cpuset io blkio memory devices pids bpf-firewall bpf-devices", "Description": "Docker Application Container Engine", "DevicePolicy": "auto", "Documentation": "https://docs.docker.com", "DynamicUser": "no", "EffectiveCPUs": "0-3", "EffectiveMemoryNodes": "0", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "10911", "ExecMainStartTimestamp": "Sun 2023-06-04 15:18:15 BST", "ExecMainStartTimestampMonotonic": "5879132394", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -s HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -s HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/dockerd ; argv[]=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock ; ignore_errors=no ; start_time=[Sun 2023-06-04 15:18:15 BST] ; stop_time=[n/a] ; pid=10911 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/dockerd ; argv[]=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock ; flags= ; start_time=[Sun 2023-06-04 15:18:15 BST] ; stop_time=[n/a] ; pid=10911 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/lib/systemd/system/docker.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "0", "IOSchedulingPriority": "0", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "docker.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Sun 2023-06-04 15:18:15 BST", "InactiveExitTimestampMonotonic": "5879134910", "InvocationID": "b8635f5d5e724c1eaea6762fd85e1b86", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "process", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "infinity", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "infinity", "LimitNOFILESoft": "infinity", "LimitNPROC": "infinity", "LimitNPROCSoft": "infinity", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "2598", "LimitSIGPENDINGSoft": "2598", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "10911", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimitPercent": "0%", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "MountFlags": "", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAMask": "", "NUMAPolicy": "n/a", "Names": "docker.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "-500", "OnFailureJobMode": "replace", "Perpetual": "no", "PrivateDevices": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "docker.socket sysinit.target system.slice", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "2s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RootHashSignature": "", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardInputData": "", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "3", "StartLimitIntervalUSec": "1min", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Sun 2023-06-04 15:18:22 BST", "StateChangeTimestampMonotonic": "5885960948", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "10", "TasksMax": "infinity", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "infinity", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "TriggeredBy": "docker.socket", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "containerd.service network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}

TASK [Initialize Docker Swarm] ****************************************************************************
fatal: [10.10.10.100]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'ansible_default_ipv4' is undefined. 'ansible_default_ipv4' is undefined\n\nThe error appears to be in '/Users/andi/Documents/GitHub/bachelor-thesis/ansible/install_raspberrypi.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Initialize Docker Swarm\n      ^ here\n"}
...ignoring

TASK [Join Docker Swarm as worker] ************************************************************************
fatal: [10.10.10.100]: FAILED! => {"msg": "The conditional check ''already exists' in swarm_init_output.stdout' failed. The error was: error while evaluating conditional ('already exists' in swarm_init_output.stdout): 'dict object' has no attribute 'stdout'. 'dict object' has no attribute 'stdout'\n\nThe error appears to be in '/Users/andi/Documents/GitHub/bachelor-thesis/ansible/install_raspberrypi.yml': line 49, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Join Docker Swarm as worker\n      ^ here\n"}

PLAY RECAP ************************************************************************************************
10.10.10.100             : ok=7    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=1   

% 